[tool.poetry]
name = "dockerize-poetry"
version = "0.1.0"
description = "Showcasing how to package a poetry project"
authors = ["Franco Bocci <francogbocci@gmail.com>"]
license = "Not open source"
readme = "README.md"
homepage = "https://github.com/privatedumbo/dockerize-poetry"
repository = "https://github.com/privatedumbo/dockerize-poetry"
keywords = ["dockerize-poetry"]
classifiers=[
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/privatedumbo/dockerize-poetry/issues"

[tool.poetry.dependencies]
python = "<3.13,>=3.9"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.1"
invoke = "^2.2.0"
bump2version = "^1.0.1"
watchdog = {version = "^4.0.0", extras = ["watchmedo"]}
ipdb = "^0.13.13"

[tool.poetry.group.test.dependencies]
pytest = "^8.0.1"
xdoctest = "^1.1.3"
coverage = {version = "^7.4.1", extras = ["toml"]}
pytest-cov = "^5.0.0"

[tool.poetry.group.linters.dependencies]
isort = "^5.13.2"
black = "^24.2.0"
ruff = "^0.3.2"

[tool.poetry.group.typing.dependencies]
mypy = "^1.8.0"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["dockerize-poetry"]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug",
  "if settings.DEBUG:",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == __main__:"
]
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
target-version = "py311"
output-format = "full"
line-length = 88
fix = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN101",
    "FBT0",  # Boolean default positional argument in function definition
]
unfixable = [
  "ERA",  # Don't remove commented-out code
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101",  # # "Use of `assert` detected"
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["dockerize_poetry"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["pytest.*", "invoke.*", "nox.*", "nox_poetry.*"]
allow_redefinition = false
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = true
local_partial_types = true
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = true
warn_unreachable = true
warn_no_return = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
